{"ast":null,"code":"var _jsxFileName = \"/Users/keatonsinger/Desktop/Algorithm-Visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const stack = [];\n  const [bitmap, setBitmap] = useState([]);\n  const [algorithm, setAlogirthm] = useState(\"DFS\");\n  const [algOpt, setAlgOpt] = useState(\"none\");\n  const [speedOpt, setSpeedOpt] = useState(\"none\");\n  const [toolsOpt, setToolsOpt] = useState(\"none\");\n  const [gridOpt, setGridOpt] = useState(\"none\");\n  const [startStop, setStartStop] = useState([\"Start!\", \"green\"]);\n  const startP = useRef(\"Start!\");\n  const [origin, setOrigin] = useState(288);\n  const [target, setTarget] = useState(800);\n  const [walls, setWalls] = useState([89, 90, 91, 92, 93, 94, 95]);\n  const [pathHead, setPathHead] = useState(-1);\n  const path = useRef([]);\n  const [tool, setTool] = useState(\"Place Walls\");\n  const mouseHeld = useRef(\"up\");\n  useEffect(() => {\n    GenerateBitmap();\n  }, [origin, target, walls, path.current, pathHead]);\n  useEffect(() => {\n    // if (startStop[0] === \"Stop!\" && algorithm === \"BFS\") {\n    //   if (path.current.length > 0) BFS(path.current[path.current.length - 1]);\n    //   else BFS(origin);\n    // };\n    if (startStop[0] === \"Stop!\" && algorithm === \"DFS\") {\n      if (path.current.length > 0) DFS(path.current[path.current.length - 1]);else DFS(origin);\n    }\n    ;\n  }, [startStop]);\n  window.addEventListener('mousedown', () => {\n    mouseHeld.current = true;\n  });\n  window.addEventListener('mouseup', () => {\n    mouseHeld.current = false;\n  });\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n  function Draw(bitIndex, action) {\n    if (action === \"drag\" && mouseHeld.current === false) {\n      return;\n    }\n    if (startStop[0] !== \"Start!\" || tool === \"\") {\n      return;\n    } else if (tool === \"Move Origin\" && bitIndex !== target && !walls.includes(bitIndex)) {\n      setOrigin(bitIndex);\n    } else if (tool === \"Move Target\" && bitIndex !== origin && !walls.includes(bitIndex)) {\n      setTarget(bitIndex);\n    } else if (bitIndex === origin || bitIndex === target) {\n      return;\n    } else if (tool === \"Place Walls\") {\n      setWalls(walls => [...walls, bitIndex]);\n    } else if (tool === \"Erase Walls\") {\n      let wallsCopy = [...walls];\n      wallsCopy = wallsCopy.filter(index => {\n        return index !== bitIndex;\n      });\n      setWalls([...wallsCopy]);\n    }\n    ;\n  }\n  ;\n  function EmptyBit(bitIndex) {\n    if (!walls.includes(bitIndex) && !path.current.includes(bitIndex)) {\n      return true;\n    }\n    ;\n    return false;\n  }\n  ;\n  async function DFS(pixel) {\n    if (stack.length === 0) {\n      stack.push(pixel);\n    }\n    console.log(stack);\n    while (stack.length && stack[stack.length - 1] !== target && startP.current === \"Stop!\") {\n      await sleep(50);\n      let topIndex = stack.pop();\n      path.current = [...path.current, topIndex];\n      setPathHead(topIndex);\n      if (topIndex % 33 > 0 && EmptyBit(topIndex - 1, path.current)) {\n        stack.push(topIndex - 1);\n      }\n      ;\n      if (topIndex < 1056 && EmptyBit(topIndex + 33, path.current)) {\n        stack.push(topIndex + 33);\n      }\n      ;\n      if (topIndex % 33 < 32 && EmptyBit(topIndex + 1, path.current)) {\n        stack.push(topIndex + 1);\n      }\n      ;\n      if (topIndex > 32 && EmptyBit(topIndex - 33, path.current)) {\n        stack.push(topIndex - 33);\n      }\n      ;\n    }\n    ;\n    if (stack[stack.length - 1] === target) {\n      setPathHead(0);\n    }\n    setStartStop([\"Start!\", \"green\"]);\n    startP.current = \"Start!\";\n  }\n  ;\n\n  // async function BFS(pixel) {\n  //   let queue = [pixel];\n  //   let pathCopy = path;\n  //   while (queue.length !== 0) {\n  //     let len = queue.length;\n  //     for (let index = 0; index < len; index++) {\n  //       await sleep(10)\n  //       let current = queue.shift();\n  //       if (current === dest) {\n  //         setCurr(\"\");\n  //         return;\n  //       }\n  //       pathCopy.push(current);\n  //       setPath(path => [...path, current]);\n  //       setCurr(current);\n  //       if (current % 33 > 0 && EmptyPixel(current - 1, pathCopy) && !queue.includes(current - 1)) queue.push(current - 1);\n  //       if (current < 1056 && EmptyPixel(current + 33, pathCopy) && !queue.includes(current + 33)) queue.push(current + 33);\n  //       if (current % 33 < 32 && EmptyPixel(current + 1, pathCopy) && !queue.includes(current + 1)) queue.push(current + 1);\n  //       if (current > 32 && EmptyPixel(current - 33, pathCopy) && !queue.includes(current - 33)) queue.push(current - 33);\n  //     }\n  //   }\n  //   setCurr(\"\");\n  // }\n\n  function GenerateBitmap() {\n    let generatedBits = [];\n    for (let bitIndex = 0; bitIndex < 1089; bitIndex++) {\n      generatedBits.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Bit\",\n        onMouseEnter: () => {\n          Draw(bitIndex, \"drag\");\n        },\n        onMouseDown: () => {\n          Draw(bitIndex, \"click\");\n        },\n        style: {\n          backgroundColor: bitIndex === pathHead ? \"green\" : bitIndex === origin || path.current.includes(bitIndex) ? \"rgb(120, 210, 130)\" : bitIndex === target ? \"rgb(210, 120, 130)\" : walls.includes(bitIndex) ? \"rgb(40, 40, 40)\" : \"rgb(40, 100, 140)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this));\n    }\n    ;\n    setBitmap(generatedBits);\n  }\n  ;\n  function StartStop() {\n    if (startP.current === \"Start!\") {\n      startP.current = \"Stop!\";\n    } else if (startP.current === \"Stop!\") {\n      startP.current = \"Start!\";\n    }\n    if (startStop[0] === \"Start!\") {\n      setStartStop([\"Stop!\", \"red\"]);\n    } else if (startStop[1] === \"Stop!\") {\n      setStartStop([\"Start!\", \"green\"]);\n    }\n    ;\n  }\n  ;\n  function ToggleCategory(state, setFunction) {\n    let categories = [setAlgOpt, setSpeedOpt, setToolsOpt, setGridOpt];\n    for (let index = 0; index < 4; index++) {\n      categories[index](\"none\");\n    }\n    ;\n    state === \"none\" ? setFunction(\"block\") : setFunction(\"none\");\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onMouseLeave: () => {},\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"HeaderTitle\",\n        children: \"Pathfinding Visualized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(algOpt, setAlgOpt);\n          },\n          children: \"Algorithms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(speedOpt, setSpeedOpt);\n          },\n          children: \"Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(toolsOpt, setToolsOpt);\n          },\n          children: \"Tools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(gridOpt, setGridOpt);\n          },\n          children: \"Grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"StartStop\",\n      onClick: () => {\n        StartStop();\n      },\n      style: {\n        backgroundColor: startStop[1]\n      },\n      children: startStop[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"BitmapContainer\",\n      children: bitmap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oNdShr9O920xAUsc68h9f3EZQcE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","App","stack","bitmap","setBitmap","algorithm","setAlogirthm","algOpt","setAlgOpt","speedOpt","setSpeedOpt","toolsOpt","setToolsOpt","gridOpt","setGridOpt","startStop","setStartStop","startP","origin","setOrigin","target","setTarget","walls","setWalls","pathHead","setPathHead","path","tool","setTool","mouseHeld","GenerateBitmap","current","length","DFS","window","addEventListener","sleep","ms","Promise","resolve","setTimeout","Draw","bitIndex","action","includes","wallsCopy","filter","index","EmptyBit","pixel","push","console","log","topIndex","pop","generatedBits","backgroundColor","StartStop","ToggleCategory","state","setFunction","categories"],"sources":["/Users/keatonsinger/Desktop/Algorithm-Visualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const stack = [];\n  const [bitmap, setBitmap] = useState([]);\n  const [algorithm, setAlogirthm] = useState(\"DFS\");\n  const [algOpt, setAlgOpt] = useState(\"none\");\n  const [speedOpt, setSpeedOpt] = useState(\"none\");\n  const [toolsOpt, setToolsOpt] = useState(\"none\");\n  const [gridOpt, setGridOpt] = useState(\"none\");\n  const [startStop, setStartStop] = useState([\"Start!\", \"green\"]);\n  const startP = useRef(\"Start!\");\n  const [origin, setOrigin] = useState(288);\n  const [target, setTarget] = useState(800);\n  const [walls, setWalls] = useState([89, 90, 91, 92, 93, 94, 95]);\n  const [pathHead, setPathHead] = useState(-1);\n  const path = useRef([]);\n  const [tool, setTool] = useState(\"Place Walls\");\n  const mouseHeld = useRef(\"up\");\n  useEffect(() => {\n    GenerateBitmap();\n  }, [origin, target, walls, path.current, pathHead]);\n  useEffect(() => {\n    // if (startStop[0] === \"Stop!\" && algorithm === \"BFS\") {\n    //   if (path.current.length > 0) BFS(path.current[path.current.length - 1]);\n    //   else BFS(origin);\n    // };\n    if (startStop[0] === \"Stop!\" && algorithm === \"DFS\") {\n      if (path.current.length > 0) DFS(path.current[path.current.length - 1]);\n      else DFS(origin);\n    };\n  }, [startStop]);\n  window.addEventListener('mousedown', () => {\n    mouseHeld.current = true;\n  });\n  window.addEventListener('mouseup', () => {\n    mouseHeld.current = false;\n  });\n\n\n  const sleep = ms => new Promise(\n    resolve => setTimeout(resolve, ms)\n  );\n\n\n  function Draw(bitIndex, action) {\n    if (action === \"drag\" && mouseHeld.current === false) { return; }\n    if (startStop[0] !== \"Start!\" || tool === \"\") { return; }\n    else if (tool === \"Move Origin\" && bitIndex !== target && !walls.includes(bitIndex)) { setOrigin(bitIndex); }\n    else if (tool === \"Move Target\" && bitIndex !== origin && !walls.includes(bitIndex)) { setTarget(bitIndex); }\n    else if (bitIndex === origin || bitIndex === target) { return; }\n    else if (tool === \"Place Walls\") { setWalls(walls => [...walls, bitIndex]); }\n    else if (tool === \"Erase Walls\") {\n      let wallsCopy = [...walls];\n      wallsCopy = wallsCopy.filter((index) => { return index !== bitIndex; });\n      setWalls([...wallsCopy]);\n    };\n  };\n\n\n  function EmptyBit(bitIndex) {\n    if (!walls.includes(bitIndex) && !path.current.includes(bitIndex)) { return true; };\n    return false;\n  };\n\n\n  async function DFS(pixel) {\n    if (stack.length === 0) { stack.push(pixel); }\n    console.log(stack);\n    while (stack.length && stack[stack.length - 1] !== target && startP.current === \"Stop!\") {\n      await sleep(50)\n      let topIndex = stack.pop()\n      path.current = [...path.current, topIndex]\n      setPathHead(topIndex);\n      if (topIndex % 33 > 0 && EmptyBit(topIndex - 1, path.current)) { stack.push(topIndex - 1); };\n      if (topIndex < 1056 && EmptyBit(topIndex + 33, path.current)) { stack.push(topIndex + 33); };\n      if (topIndex % 33 < 32 && EmptyBit(topIndex + 1, path.current)) { stack.push(topIndex + 1); };\n      if (topIndex > 32 && EmptyBit(topIndex - 33, path.current)) { stack.push(topIndex - 33); };\n    };\n    if (stack[stack.length - 1] === target) { setPathHead(0); }\n    setStartStop([\"Start!\", \"green\"])\n    startP.current = \"Start!\"\n  };\n\n\n  // async function BFS(pixel) {\n  //   let queue = [pixel];\n  //   let pathCopy = path;\n  //   while (queue.length !== 0) {\n  //     let len = queue.length;\n  //     for (let index = 0; index < len; index++) {\n  //       await sleep(10)\n  //       let current = queue.shift();\n  //       if (current === dest) {\n  //         setCurr(\"\");\n  //         return;\n  //       }\n  //       pathCopy.push(current);\n  //       setPath(path => [...path, current]);\n  //       setCurr(current);\n  //       if (current % 33 > 0 && EmptyPixel(current - 1, pathCopy) && !queue.includes(current - 1)) queue.push(current - 1);\n  //       if (current < 1056 && EmptyPixel(current + 33, pathCopy) && !queue.includes(current + 33)) queue.push(current + 33);\n  //       if (current % 33 < 32 && EmptyPixel(current + 1, pathCopy) && !queue.includes(current + 1)) queue.push(current + 1);\n  //       if (current > 32 && EmptyPixel(current - 33, pathCopy) && !queue.includes(current - 33)) queue.push(current - 33);\n  //     }\n  //   }\n  //   setCurr(\"\");\n  // }\n\n\n  function GenerateBitmap() {\n    let generatedBits = [];\n    for (let bitIndex = 0; bitIndex < 1089; bitIndex++) {\n        generatedBits.push(\n          <div id=\"Bit\" \n            onMouseEnter={() => { Draw(bitIndex, \"drag\"); }} \n            onMouseDown={() => { Draw(bitIndex, \"click\"); }} \n            style={{backgroundColor: \n              (bitIndex === pathHead) ? \"green\" : (bitIndex === origin || path.current.includes(bitIndex)) ? \"rgb(120, 210, 130)\" : (bitIndex === target) ? \"rgb(210, 120, 130)\" :\n              (walls.includes(bitIndex) ? \"rgb(40, 40, 40)\" : \"rgb(40, 100, 140)\")\n            }}>\n          </div>\n        );\n    };\n    setBitmap(generatedBits);\n  };\n\n\n  function StartStop() {\n    if (startP.current === \"Start!\") { startP.current = \"Stop!\"; }\n    else if (startP.current === \"Stop!\") { startP.current = \"Start!\"; }\n    if (startStop[0] === \"Start!\") { setStartStop([\"Stop!\", \"red\"]); }\n    else if (startStop[1] === \"Stop!\") { setStartStop([\"Start!\", \"green\"]); };\n  };\n  \n\n\n  function ToggleCategory(state, setFunction) {\n    let categories = [setAlgOpt, setSpeedOpt, setToolsOpt, setGridOpt];\n    for (let index = 0; index < 4; index++) {\n      categories[index](\"none\");\n    };\n    (state === \"none\") ? setFunction(\"block\") : setFunction(\"none\");\n  };\n\n  return (\n    <div className=\"App\" onMouseLeave={() => {}}>\n      <div id=\"Header\">\n        <div id=\"HeaderTitle\">\n          Pathfinding Visualized\n        </div>\n        <div id=\"Categories\">\n          <div className=\"Category\" onClick={() => {ToggleCategory(algOpt, setAlgOpt)}}>\n            Algorithms\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(speedOpt, setSpeedOpt)}}>\n            Speed\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(toolsOpt, setToolsOpt)}}>\n            Tools\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(gridOpt, setGridOpt)}}>\n            Grid\n          </div>\n        </div>\n      </div>\n      <div id=\"StartStop\" onClick={() => {StartStop()}} style={{backgroundColor: startStop[1]}}>\n        {startStop[0]}\n      </div>\n      <div id=\"Key\"></div>\n      <div id=\"BitmapContainer\">\n        {bitmap}\n      </div> \n    </div>\n  );\n} \n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}