{"ast":null,"code":"var _jsxFileName = \"/Users/keatonsinger/Desktop/Algorithm-Visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [algorithm, setAlogirthm] = useState(\"DFS\");\n  const [algOpt, setAlgOpt] = useState(\"none\");\n  const [speedOpt, setSpeedOpt] = useState(\"none\");\n  const [toolsOpt, setToolsOpt] = useState(\"none\");\n  const [gridOpt, setGridOpt] = useState(\"none\");\n  const [startStop, setStartStop] = useState([\"Start!\", \"green\"]);\n  const startP = useRef(\"Start!\");\n  const [origin, setOrigin] = useState(288);\n  const [target, setTarget] = useState(800);\n  const [walls, setWalls] = useState([]);\n  const [pathHead, setPathHead] = useState(\"\");\n  const path = useRef([]);\n  const [tool, setTool] = useState(\"\");\n  const mouseHeld = useRef(\"up\");\n  useEffect(() => {\n    GenerateGrid();\n  }, [origin, dest, path.current, barrier, curr]);\n  useEffect(() => {\n    startP.current === \"Start!\" ? startP.current = \"Stop!\" : startP.current = \"Start!\";\n    // if (startStop[0] === \"Stop!\" && algorithm === \"BFS\") {\n    //   if (path.current.length > 0) BFS(path.current[path.current.length - 1]);\n    //   else BFS(origin);\n    // };\n    if (startStop[0] === \"Stop!\" && algorithm === \"DFS\") {\n      if (path.current.length > 0) DFS(path.current[path.current.length - 1]);else DFS(origin);\n    }\n    ;\n  }, [startStop]);\n  window.addEventListener('mousedown', () => {\n    mouseHeld.current = true;\n  });\n  window.addEventListener('mouseup', () => {\n    mouseHeld.current = false;\n  });\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n  function Draw(bitIndex, action) {\n    if (action === \"drag\" && mouseHeld.current === false) {\n      return;\n    }\n    if (StartStop[0] !== \"Start!\" || tool === \"\") {\n      return;\n    } else if (tool === \"Move Origin\" && bitIndex !== target) {\n      setOrigin(bitIndex);\n    } else if (tool === \"Move Target\" && bitIndex !== origin) {\n      setTarget(bitIndex);\n    } else if (bitIndex === origin || bitIndex === target) {\n      return;\n    } else if (tool === \"Place Walls\") {\n      setWalls(walls => [...walls, bitIndex]);\n    } else if (tool === \"Erase Walls\") {\n      let wallsCopy = [...walls];\n      wallsCopy = wallsCopy.filter(index => {\n        return index !== bitIndex;\n      });\n      setWalls([...wallsCopy]);\n    }\n    ;\n  }\n  ;\n  function EmptyPixel(pixel, pathCopy) {\n    if (!barrier.includes(pixel) && !path.current.includes(pixel)) return true;else return false;\n  }\n  ;\n  async function DFS(pixel) {\n    console.log(startP.current);\n    let stack = [pixel];\n    // let pathCopy = path;\n    while (stack.length !== 0 && stack[stack.length - 1] !== dest && startP.current === \"Stop!\") {\n      await sleep(50);\n      let current = stack.pop();\n      // pathCopy.push(current);\n      path.current = [...path.current, current];\n      setCurr(current);\n      if (current % 33 > 0 && EmptyPixel(current - 1, path.current)) stack.push(current - 1);\n      if (current < 1056 && EmptyPixel(current + 33, path.current)) stack.push(current + 33);\n      if (current % 33 < 32 && EmptyPixel(current + 1, path.current)) stack.push(current + 1);\n      if (current > 32 && EmptyPixel(current - 33, path.current)) stack.push(current - 33);\n    }\n    ;\n    startP.current = \"Start!\";\n    setStartStop([\"Start!\", \"green\"]);\n    setCurr(\"\");\n  }\n  ;\n\n  // async function BFS(pixel) {\n  //   let queue = [pixel];\n  //   let pathCopy = path;\n  //   while (queue.length !== 0) {\n  //     let len = queue.length;\n  //     for (let index = 0; index < len; index++) {\n  //       await sleep(10)\n  //       let current = queue.shift();\n  //       if (current === dest) {\n  //         setCurr(\"\");\n  //         return;\n  //       }\n  //       pathCopy.push(current);\n  //       setPath(path => [...path, current]);\n  //       setCurr(current);\n  //       if (current % 33 > 0 && EmptyPixel(current - 1, pathCopy) && !queue.includes(current - 1)) queue.push(current - 1);\n  //       if (current < 1056 && EmptyPixel(current + 33, pathCopy) && !queue.includes(current + 33)) queue.push(current + 33);\n  //       if (current % 33 < 32 && EmptyPixel(current + 1, pathCopy) && !queue.includes(current + 1)) queue.push(current + 1);\n  //       if (current > 32 && EmptyPixel(current - 33, pathCopy) && !queue.includes(current - 33)) queue.push(current - 33);\n  //     }\n  //   }\n  //   setCurr(\"\");\n  // }\n\n  function GenerateGrid() {\n    let generatedPixels = [];\n    for (let index = 0; index < 1089; index++) {\n      generatedPixels.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Pixel\",\n        onMouseEnter: () => {\n          DragDraw(index);\n        },\n        onMouseDown: () => {\n          ClickDraw(index);\n        },\n        style: {\n          backgroundColor: index === curr ? \"green\" : index === origin || path.current.includes(index) ? \"rgb(120, 210, 130)\" : index === dest ? \"rgb(210, 120, 130)\" : barrier.includes(index) ? \"rgb(40, 40, 40)\" : \"rgb(40, 100, 140)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this));\n    }\n    ;\n    setGrid(generatedPixels);\n    return generatedPixels;\n  }\n  ;\n  function ToggleCategory(state, setFunction) {\n    let categories = [setAlgOpt, setSpeedOpt, setToolsOpt, setGridOpt];\n    for (let index = 0; index < 4; index++) {\n      categories[index](\"none\");\n    }\n    ;\n    state === \"none\" ? setFunction(\"block\") : setFunction(\"none\");\n  }\n  ;\n  function StartStop() {\n    startStop[0] === \"Start!\" ? setStartStop([\"Stop!\", \"red\"]) : setStartStop([\"Start!\", \"green\"]);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"HeaderTitle\",\n        children: \"Pathfinding Visualized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(algOpt, setAlgOpt);\n          },\n          children: \"Algorithms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(speedOpt, setSpeedOpt);\n          },\n          children: \"Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(toolsOpt, setToolsOpt);\n          },\n          children: \"Tools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(gridOpt, setGridOpt);\n          },\n          children: \"Grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"StartStop\",\n      onClick: () => {\n        StartStop();\n      },\n      style: {\n        backgroundColor: startStop[1]\n      },\n      children: startStop[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"GridContainer\",\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2vhQD3oOCUdXrmjOuDhMQucpLRE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","App","grid","setGrid","algorithm","setAlogirthm","algOpt","setAlgOpt","speedOpt","setSpeedOpt","toolsOpt","setToolsOpt","gridOpt","setGridOpt","startStop","setStartStop","startP","origin","setOrigin","target","setTarget","walls","setWalls","pathHead","setPathHead","path","tool","setTool","mouseHeld","GenerateGrid","dest","current","barrier","curr","length","DFS","window","addEventListener","sleep","ms","Promise","resolve","setTimeout","Draw","bitIndex","action","StartStop","wallsCopy","filter","index","EmptyPixel","pixel","pathCopy","includes","console","log","stack","pop","setCurr","push","generatedPixels","DragDraw","ClickDraw","backgroundColor","ToggleCategory","state","setFunction","categories"],"sources":["/Users/keatonsinger/Desktop/Algorithm-Visualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const [grid, setGrid] = useState([]);\n  const [algorithm, setAlogirthm] = useState(\"DFS\");\n  const [algOpt, setAlgOpt] = useState(\"none\");\n  const [speedOpt, setSpeedOpt] = useState(\"none\");\n  const [toolsOpt, setToolsOpt] = useState(\"none\");\n  const [gridOpt, setGridOpt] = useState(\"none\");\n  const [startStop, setStartStop] = useState([\"Start!\", \"green\"]);\n  const startP = useRef(\"Start!\");\n  const [origin, setOrigin] = useState(288);\n  const [target, setTarget] = useState(800);\n  const [walls, setWalls] = useState([]);\n  const [pathHead, setPathHead] = useState(\"\");\n  const path = useRef([]);\n  const [tool, setTool] = useState(\"\");\n  const mouseHeld = useRef(\"up\");\n  useEffect(() => {\n    GenerateGrid();\n  }, [origin, dest, path.current, barrier, curr]);\n  useEffect(() => {\n    (startP.current === \"Start!\") ? startP.current = \"Stop!\" : startP.current = \"Start!\";\n    // if (startStop[0] === \"Stop!\" && algorithm === \"BFS\") {\n    //   if (path.current.length > 0) BFS(path.current[path.current.length - 1]);\n    //   else BFS(origin);\n    // };\n    if (startStop[0] === \"Stop!\" && algorithm === \"DFS\") {\n      if (path.current.length > 0) DFS(path.current[path.current.length - 1]);\n      else DFS(origin);\n    };\n  }, [startStop]);\n  window.addEventListener('mousedown', () => {\n    mouseHeld.current = true;\n  });\n  window.addEventListener('mouseup', () => {\n    mouseHeld.current = false;\n  });\n\n  const sleep = ms => new Promise(\n    resolve => setTimeout(resolve, ms)\n  );\n\n\n  function Draw(bitIndex, action) {\n    if (action === \"drag\" && mouseHeld.current === false) { return; }\n    if (StartStop[0] !== \"Start!\" || tool === \"\") { return; }\n    else if (tool === \"Move Origin\" && bitIndex !== target) { setOrigin(bitIndex); }\n    else if (tool === \"Move Target\" && bitIndex !== origin) { setTarget(bitIndex); }\n    else if (bitIndex === origin || bitIndex === target) { return; }\n    else if (tool === \"Place Walls\") { setWalls(walls => [...walls, bitIndex]); }\n    else if (tool === \"Erase Walls\") {\n      let wallsCopy = [...walls];\n      wallsCopy = wallsCopy.filter((index) => { return index !== bitIndex; });\n      setWalls([...wallsCopy]);\n    };\n  };\n\n\n  function EmptyPixel(pixel, pathCopy) {\n    if (!barrier.includes(pixel) && !path.current.includes(pixel)) return true;\n    else return false;\n  };\n\n\n  async function DFS(pixel) {\n    console.log(startP.current);\n    let stack = [pixel];\n    // let pathCopy = path;\n    while (stack.length !== 0 && stack[stack.length - 1] !== dest && startP.current === \"Stop!\") {\n      await sleep(50)\n      let current = stack.pop()\n      // pathCopy.push(current);\n      path.current = [...path.current, current]\n      setCurr(current);\n      if (current % 33 > 0 && EmptyPixel(current - 1, path.current)) stack.push(current - 1);\n      if (current < 1056 && EmptyPixel(current + 33, path.current)) stack.push(current + 33);\n      if (current % 33 < 32 && EmptyPixel(current + 1, path.current)) stack.push(current + 1);\n      if (current > 32 && EmptyPixel(current - 33, path.current)) stack.push(current - 33);\n    };\n    startP.current = \"Start!\"\n    setStartStop([\"Start!\", \"green\"])\n    setCurr(\"\");\n  };\n\n\n  // async function BFS(pixel) {\n  //   let queue = [pixel];\n  //   let pathCopy = path;\n  //   while (queue.length !== 0) {\n  //     let len = queue.length;\n  //     for (let index = 0; index < len; index++) {\n  //       await sleep(10)\n  //       let current = queue.shift();\n  //       if (current === dest) {\n  //         setCurr(\"\");\n  //         return;\n  //       }\n  //       pathCopy.push(current);\n  //       setPath(path => [...path, current]);\n  //       setCurr(current);\n  //       if (current % 33 > 0 && EmptyPixel(current - 1, pathCopy) && !queue.includes(current - 1)) queue.push(current - 1);\n  //       if (current < 1056 && EmptyPixel(current + 33, pathCopy) && !queue.includes(current + 33)) queue.push(current + 33);\n  //       if (current % 33 < 32 && EmptyPixel(current + 1, pathCopy) && !queue.includes(current + 1)) queue.push(current + 1);\n  //       if (current > 32 && EmptyPixel(current - 33, pathCopy) && !queue.includes(current - 33)) queue.push(current - 33);\n  //     }\n  //   }\n  //   setCurr(\"\");\n  // }\n\n\n  function GenerateGrid() {\n    let generatedPixels = [];\n    for (let index = 0; index < 1089; index++) {\n        generatedPixels.push(\n          <div id=\"Pixel\" onMouseEnter={() => {DragDraw(index)}} \n            onMouseDown={() => {ClickDraw(index)}} \n            style={{backgroundColor: \n              (index === curr) ? \"green\" : (index === origin || path.current.includes(index)) ? \"rgb(120, 210, 130)\" : (index === dest) ? \"rgb(210, 120, 130)\" :\n              (barrier.includes(index) ? \"rgb(40, 40, 40)\" : \"rgb(40, 100, 140)\")\n            }}>\n          </div>\n        );\n    };\n    setGrid(generatedPixels);\n    return generatedPixels;\n  };\n\n\n  function ToggleCategory(state, setFunction) {\n    let categories = [setAlgOpt, setSpeedOpt, setToolsOpt, setGridOpt];\n    for (let index = 0; index < 4; index++) {\n      categories[index](\"none\");\n    };\n    (state === \"none\") ? setFunction(\"block\") : setFunction(\"none\");\n  };\n\n\n  function StartStop() {\n    (startStop[0] === \"Start!\") ? setStartStop([\"Stop!\", \"red\"]) : setStartStop([\"Start!\", \"green\"]);\n  };\n  \n\n  return (\n    <div className=\"App\">\n      <div id=\"Header\">\n        <div id=\"HeaderTitle\">\n          Pathfinding Visualized\n        </div>\n        <div id=\"Categories\">\n          <div className=\"Category\" onClick={() => {ToggleCategory(algOpt, setAlgOpt)}}>\n            Algorithms\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(speedOpt, setSpeedOpt)}}>\n            Speed\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(toolsOpt, setToolsOpt)}}>\n            Tools\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(gridOpt, setGridOpt)}}>\n            Grid\n          </div>\n        </div>\n      </div>\n      <div id=\"StartStop\" onClick={() => {StartStop()}} style={{backgroundColor: startStop[1]}}>\n        {startStop[0]}\n      </div>\n      <div id=\"Key\"></div>\n      <div id=\"GridContainer\">\n        {grid}\n      </div> \n    </div>\n  );\n} \n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}