{"ast":null,"code":"var _jsxFileName = \"/Users/keatonsinger/Desktop/Algorithm-Visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const speed = useRef(50);\n  const stackDFS = useRef([]);\n  const queueBFS = useRef([]);\n  const [bitmap, setBitmap] = useState([]);\n  const [algorithm, setAlogirthm] = useState(\"DFS\");\n  const [algOpt, setAlgOpt] = useState(\"none\");\n  const [speedOpt, setSpeedOpt] = useState(\"none\");\n  const [toolsOpt, setToolsOpt] = useState(\"none\");\n  const [gridOpt, setGridOpt] = useState(\"none\");\n  const [startButton, setStartButton] = useState(\"Start!\");\n  const startPersist = useRef(\"Start!\");\n  const [origin, setOrigin] = useState(288);\n  const [target, setTarget] = useState(800);\n  const [walls, setWalls] = useState([]);\n  const [pathHead, setPathHead] = useState(-1);\n  const path = useRef([]);\n  const [tool, setTool] = useState(\"\");\n  const mouseHeld = useRef(\"up\");\n  useEffect(() => {\n    GenerateBitmap();\n  }, [origin, target, walls, path.current, pathHead, tool]);\n  useEffect(() => {\n    // if (startStop[0] === \"Stop!\" && algorithm === \"BFS\") {\n    //   if (path.current.length > 0) BFS(path.current[path.current.length - 1]);\n    //   else BFS(origin);\n    // };\n    if (startButton === \"Stop!\" && algorithm === \"DFS\") {\n      if (path.current.length > 0) DFS(path.current[path.current.length - 1]);else DFS(origin);\n    }\n    ;\n  }, [startButton]);\n  window.addEventListener('mousedown', () => {\n    mouseHeld.current = true;\n  });\n  window.addEventListener('mouseup', () => {\n    mouseHeld.current = false;\n  });\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n  function Draw(bitIndex, action) {\n    if (action === \"drag\" && mouseHeld.current === false) {\n      return;\n    }\n    if (startButton !== \"Start!\" || tool === \"\") {\n      return;\n    } else if (tool === \"Move Origin\" && path.current.length !== 0) {\n      return;\n    } else if (tool === \"Move Origin\" && bitIndex !== target && !walls.includes(bitIndex) && path.current.length === 0) {\n      setOrigin(bitIndex);\n    } else if (tool === \"Move Target\" && bitIndex !== origin && !walls.includes(bitIndex) && !path.current.includes(bitIndex)) {\n      setTarget(bitIndex);\n    } else if (bitIndex === origin || bitIndex === target) {\n      return;\n    } else if (tool === \"Place Walls\") {\n      setWalls(walls => [...walls, bitIndex]);\n    } else if (tool === \"Erase Walls\") {\n      let wallsCopy = [...walls];\n      wallsCopy = wallsCopy.filter(index => {\n        return index !== bitIndex;\n      });\n      setWalls([...wallsCopy]);\n    }\n    ;\n  }\n  ;\n  function EmptyBit(bitIndex) {\n    if (!walls.includes(bitIndex) && !path.current.includes(bitIndex)) {\n      return true;\n    }\n    ;\n    return false;\n  }\n  ;\n  async function DFS(currentBit) {\n    function stackPush(item) {\n      stackDFS.current = [...stackDFS.current, item];\n    }\n    ;\n    if (stackDFS.current.length === 0) {\n      stackPush(currentBit);\n    }\n    ;\n    let topItem = -1;\n    while (stackDFS.current.length && startPersist.current === \"Stop!\") {\n      await sleep(speed.current);\n      let lastIndex = stackDFS.current.length - 1;\n      topItem = stackDFS.current[lastIndex];\n      stackDFS.current = stackDFS.current.slice(0, lastIndex);\n      if (topItem === target) {\n        setPathHead(topItem);\n        break;\n      }\n      if (walls.includes(topItem)) {\n        continue;\n      }\n      setPathHead(topItem);\n      path.current = [...path.current, topItem];\n      if (topItem % 33 > 0 && EmptyBit(topItem - 1, path.current)) {\n        stackPush(topItem - 1);\n      }\n      ;\n      if (topItem < 1056 && EmptyBit(topItem + 33, path.current)) {\n        stackPush(topItem + 33);\n      }\n      ;\n      if (topItem % 33 < 32 && EmptyBit(topItem + 1, path.current)) {\n        stackPush(topItem + 1);\n      }\n      ;\n      if (topItem > 32 && EmptyBit(topItem - 33, path.current)) {\n        stackPush(topItem - 33);\n      }\n      ;\n    }\n    ;\n    if (path.current.indexOf(undefined) > -1 || path.current.length === 0) {\n      path.current = [];\n      return;\n    } else if (topItem === target || stackDFS.current.length === 0) {\n      setStartButton(\"Clear Path!\");\n    }\n    ;\n  }\n  ;\n  async function BFS(currentBit) {\n    function queueAppend(item) {\n      queueBFS.current = [...queueBFS, item];\n    }\n    ;\n    if (queueBFS.current.length === 0) {\n      queueAppend(currentBit);\n    }\n    ;\n    let nextItem = -1;\n    while (queueBFS.length !== 0) {\n      let queueLength = queue.length;\n      for (let queueIndex = 0; queueIndex < queueLength; queueIndex++) {\n        await sleep(speed);\n        let lastIndex = queueDFS.current.length - 1;\n        nextItem = queueBFS.current[lastIndex];\n        queueBFS.current = queueBFS.current.slice(0, lastIndex);\n        if (nextItem === target) {\n          setPathHead(target);\n          return;\n        }\n        pathCopy.push(current);\n        setPath(path => [...path, current]);\n        setCurr(current);\n        if (current % 33 > 0 && EmptyPixel(current - 1, pathCopy) && !queue.includes(current - 1)) queue.push(current - 1);\n        if (current < 1056 && EmptyPixel(current + 33, pathCopy) && !queue.includes(current + 33)) queue.push(current + 33);\n        if (current % 33 < 32 && EmptyPixel(current + 1, pathCopy) && !queue.includes(current + 1)) queue.push(current + 1);\n        if (current > 32 && EmptyPixel(current - 33, pathCopy) && !queue.includes(current - 33)) queue.push(current - 33);\n      }\n    }\n    setCurr(\"\");\n  }\n  function GenerateBitmap() {\n    let generatedBits = [];\n    for (let bitIndex = 0; bitIndex < 1089; bitIndex++) {\n      generatedBits.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Bit\",\n        onMouseEnter: () => {\n          Draw(bitIndex, \"drag\");\n        },\n        onMouseDown: () => {\n          Draw(bitIndex, \"click\");\n        },\n        style: {\n          backgroundColor: bitIndex === pathHead ? \"green\" : bitIndex === origin || path.current.includes(bitIndex) ? \"rgb(120, 210, 130)\" : bitIndex === target ? \"rgb(210, 120, 130)\" : walls.includes(bitIndex) ? \"rgb(40, 40, 40)\" : \"rgb(40, 100, 140)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this));\n    }\n    ;\n    setBitmap(generatedBits);\n  }\n  ;\n  function CleanBitmap(coverage) {\n    if (coverage === \"full\") {\n      setOrigin(288);\n      setTarget(800);\n      setWalls([]);\n    }\n    startPersist.current = \"Start!\";\n    setStartButton(\"Start!\");\n    stackDFS.current = [];\n    path.current = [];\n    setPathHead(-1);\n  }\n  function ChangeButton() {\n    if (startPersist.current === \"Stop!\") {\n      startPersist.current = \"Start!\";\n    } else {\n      startPersist.current = \"Stop!\";\n    }\n    ;\n    if (startButton === \"Start!\") {\n      setStartButton(\"Stop!\");\n    } else if (startButton === \"Stop!\") {\n      setStartButton(\"Start!\");\n    } else {\n      CleanBitmap(\"partial\");\n    }\n    ;\n  }\n  ;\n  function ToggleCategory(state, setFunction) {\n    let categories = [setAlgOpt, setSpeedOpt, setToolsOpt, setGridOpt];\n    for (let index = 0; index < 4; index++) {\n      categories[index](\"none\");\n    }\n    ;\n    state === \"none\" ? setFunction(\"block\") : setFunction(\"none\");\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"HeaderTitle\",\n        onMouseEnter: () => {\n          mouseHeld.current = false;\n        },\n        children: \"Pathfinding Visualized\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(algOpt, setAlgOpt);\n          },\n          children: \"Algorithms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(speedOpt, setSpeedOpt);\n          },\n          children: [\"Speed\", /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              speed.current = 1000;\n            },\n            children: \"Slow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              speed.current = 50;\n            },\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              speed.current = 1;\n            },\n            children: \"Fast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(toolsOpt, setToolsOpt);\n          },\n          children: [\"Tools\", /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTool(\"Move Origin\");\n            },\n            children: \"Move Origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTool(\"Move Target\");\n            },\n            children: \"Move Target\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTool(\"Place Walls\");\n            },\n            children: \"Place Walls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTool(\"Erase Walls\");\n            },\n            children: \"Erase Walls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          onClick: () => {\n            ToggleCategory(gridOpt, setGridOpt);\n          },\n          children: [\"Bitmap\", /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              CleanBitmap(\"partial\");\n            },\n            children: \"Clear Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              CleanBitmap(\"full\");\n            },\n            children: \"Reset Bitmap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"StartStop\",\n      onClick: () => {\n        ChangeButton();\n      },\n      style: {\n        backgroundColor: startButton === \"Start!\" ? \"green\" : startButton === \"Stop!\" ? \"red\" : \"grey\"\n      },\n      children: startButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"BitmapContainer\",\n      children: bitmap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VoVoIOa59vc3gEM1QjcqUUAS4/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","App","speed","stackDFS","queueBFS","bitmap","setBitmap","algorithm","setAlogirthm","algOpt","setAlgOpt","speedOpt","setSpeedOpt","toolsOpt","setToolsOpt","gridOpt","setGridOpt","startButton","setStartButton","startPersist","origin","setOrigin","target","setTarget","walls","setWalls","pathHead","setPathHead","path","tool","setTool","mouseHeld","GenerateBitmap","current","length","DFS","window","addEventListener","sleep","ms","Promise","resolve","setTimeout","Draw","bitIndex","action","includes","wallsCopy","filter","index","EmptyBit","currentBit","stackPush","item","topItem","lastIndex","slice","indexOf","undefined","BFS","queueAppend","nextItem","queueLength","queue","queueIndex","queueDFS","pathCopy","push","setPath","setCurr","EmptyPixel","generatedBits","backgroundColor","CleanBitmap","coverage","ChangeButton","ToggleCategory","state","setFunction","categories"],"sources":["/Users/keatonsinger/Desktop/Algorithm-Visualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const speed = useRef(50);\n  const stackDFS = useRef([]);\n  const queueBFS = useRef([]);\n  const [bitmap, setBitmap] = useState([]);\n  const [algorithm, setAlogirthm] = useState(\"DFS\");\n  const [algOpt, setAlgOpt] = useState(\"none\");\n  const [speedOpt, setSpeedOpt] = useState(\"none\");\n  const [toolsOpt, setToolsOpt] = useState(\"none\");\n  const [gridOpt, setGridOpt] = useState(\"none\");\n  const [startButton, setStartButton] = useState(\"Start!\");\n  const startPersist = useRef(\"Start!\");\n  const [origin, setOrigin] = useState(288);\n  const [target, setTarget] = useState(800);\n  const [walls, setWalls] = useState([]);\n  const [pathHead, setPathHead] = useState(-1);\n  const path = useRef([]);\n  const [tool, setTool] = useState(\"\");\n  const mouseHeld = useRef(\"up\");\n  useEffect(() => {\n    GenerateBitmap();\n  }, [origin, target, walls, path.current, pathHead, tool]);\n  useEffect(() => {\n    // if (startStop[0] === \"Stop!\" && algorithm === \"BFS\") {\n    //   if (path.current.length > 0) BFS(path.current[path.current.length - 1]);\n    //   else BFS(origin);\n    // };\n    if (startButton === \"Stop!\" && algorithm === \"DFS\") {\n      if (path.current.length > 0) DFS(path.current[path.current.length - 1]);\n      else DFS(origin);\n    };\n  }, [startButton]);\n  \n  \n  window.addEventListener('mousedown', () => {\n    mouseHeld.current = true;\n  });\n  window.addEventListener('mouseup', () => {\n    mouseHeld.current = false;\n  });\n\n\n  const sleep = ms => new Promise(\n    resolve => setTimeout(resolve, ms)\n  );\n\n\n  function Draw(bitIndex, action) {\n    if (action === \"drag\" && mouseHeld.current === false) { return; }\n    if (startButton !== \"Start!\" || tool === \"\") { return; }\n    else if (tool === \"Move Origin\" && path.current.length !== 0) { return; }\n    else if (tool === \"Move Origin\" && bitIndex !== target && !walls.includes(bitIndex) && path.current.length === 0) { setOrigin(bitIndex); }\n    else if (tool === \"Move Target\" && bitIndex !== origin && !walls.includes(bitIndex) && !path.current.includes(bitIndex)) { setTarget(bitIndex); }\n    else if (bitIndex === origin || bitIndex === target) { return; }\n    else if (tool === \"Place Walls\") { setWalls(walls => [...walls, bitIndex]); }\n    else if (tool === \"Erase Walls\") {\n      let wallsCopy = [...walls];\n      wallsCopy = wallsCopy.filter((index) => { return index !== bitIndex; });\n      setWalls([...wallsCopy]);\n    };\n  };\n\n\n  function EmptyBit(bitIndex) {\n    if (!walls.includes(bitIndex) && !path.current.includes(bitIndex)) { return true; };\n    return false;\n  };\n\n\n  async function DFS(currentBit) {\n    function stackPush(item) { stackDFS.current = [...stackDFS.current, item]; };\n    if (stackDFS.current.length === 0) { stackPush(currentBit); };\n    let topItem = -1;\n    while (stackDFS.current.length && startPersist.current === \"Stop!\") {\n      await sleep(speed.current);\n      let lastIndex = stackDFS.current.length - 1;\n      topItem = stackDFS.current[lastIndex];\n      stackDFS.current = stackDFS.current.slice(0, lastIndex);\n      if (topItem === target) { setPathHead(topItem); break; }\n      if (walls.includes(topItem)) { continue; }\n      setPathHead(topItem);\n      path.current = [...path.current, topItem];\n      if (topItem % 33 > 0 && EmptyBit(topItem - 1, path.current)) { stackPush(topItem - 1); };\n      if (topItem < 1056 && EmptyBit(topItem + 33, path.current)) { stackPush(topItem + 33); };\n      if (topItem % 33 < 32 && EmptyBit(topItem + 1, path.current)) { stackPush(topItem + 1); };\n      if (topItem > 32 && EmptyBit(topItem - 33, path.current)) { stackPush(topItem - 33); };\n    };\n    if (path.current.indexOf(undefined) > -1 || path.current.length === 0) { path.current = []; return; }\n    else if (topItem === target || stackDFS.current.length === 0) { setStartButton(\"Clear Path!\"); };\n  };\n\n\n  async function BFS(currentBit) {\n    function queueAppend(item) { queueBFS.current = [...queueBFS, item]; };\n    if (queueBFS.current.length === 0) { queueAppend(currentBit); };\n    let nextItem = -1;\n    while (queueBFS.length !== 0) {\n      let queueLength = queue.length;\n      for (let queueIndex = 0; queueIndex < queueLength; queueIndex++) {\n        await sleep(speed)\n        let lastIndex = queueDFS.current.length - 1;\n        nextItem = queueBFS.current[lastIndex];\n        queueBFS.current = queueBFS.current.slice(0, lastIndex);\n        if (nextItem === target) { setPathHead(target); return; }\n        pathCopy.push(current);\n        setPath(path => [...path, current]);\n        setCurr(current);\n        if (current % 33 > 0 && EmptyPixel(current - 1, pathCopy) && !queue.includes(current - 1)) queue.push(current - 1);\n        if (current < 1056 && EmptyPixel(current + 33, pathCopy) && !queue.includes(current + 33)) queue.push(current + 33);\n        if (current % 33 < 32 && EmptyPixel(current + 1, pathCopy) && !queue.includes(current + 1)) queue.push(current + 1);\n        if (current > 32 && EmptyPixel(current - 33, pathCopy) && !queue.includes(current - 33)) queue.push(current - 33);\n      }\n    }\n    setCurr(\"\");\n  }\n\n\n  function GenerateBitmap() {\n    let generatedBits = [];\n    for (let bitIndex = 0; bitIndex < 1089; bitIndex++) {\n        generatedBits.push(\n          <div id=\"Bit\" \n            onMouseEnter={() => { Draw(bitIndex, \"drag\"); }} \n            onMouseDown={() => { Draw(bitIndex, \"click\"); }} \n            style={{backgroundColor: \n              (bitIndex === pathHead) ? \"green\" : \n              (bitIndex === origin || path.current.includes(bitIndex)) ? \"rgb(120, 210, 130)\" : \n              (bitIndex === target) ? \"rgb(210, 120, 130)\" :\n              (walls.includes(bitIndex) ? \"rgb(40, 40, 40)\" : \"rgb(40, 100, 140)\")\n            }}>\n          </div>\n        );\n    };\n    setBitmap(generatedBits);\n  };\n\n\n  function CleanBitmap(coverage) {\n    if (coverage === \"full\") {\n      setOrigin(288);\n      setTarget(800);\n      setWalls([]);\n    }\n    startPersist.current = \"Start!\"; \n    setStartButton(\"Start!\"); \n    stackDFS.current = [];\n    path.current = [];\n    setPathHead(-1);\n  }\n\n\n  function ChangeButton() {\n    if (startPersist.current === \"Stop!\" ) { startPersist.current = \"Start!\"; }\n    else { startPersist.current = \"Stop!\"; };\n    if (startButton === \"Start!\") { setStartButton(\"Stop!\"); }\n    else if (startButton === \"Stop!\") { setStartButton(\"Start!\"); }\n    else { CleanBitmap(\"partial\"); };\n  };\n\n\n  function ToggleCategory(state, setFunction) {\n    let categories = [setAlgOpt, setSpeedOpt, setToolsOpt, setGridOpt];\n    for (let index = 0; index < 4; index++) {\n      categories[index](\"none\");\n    };\n    (state === \"none\") ? setFunction(\"block\") : setFunction(\"none\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"Header\">\n        <div id=\"HeaderTitle\" onMouseEnter={() => { mouseHeld.current = false; }}>\n          Pathfinding Visualized\n        </div>\n        <div id=\"Categories\">\n          <div className=\"Category\" onClick={() => {ToggleCategory(algOpt, setAlgOpt)}}>\n            Algorithms\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(speedOpt, setSpeedOpt)}}>\n            Speed\n            <div onClick={() => { speed.current = 1000; }}>Slow</div>\n            <div onClick={() => { speed.current = 50; }}>Medium</div>\n            <div onClick={() => { speed.current = 1; }}>Fast</div>\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(toolsOpt, setToolsOpt)}}>\n            Tools\n            <div onClick={() => { setTool(\"Move Origin\"); }}>Move Origin</div>\n            <div onClick={() => { setTool(\"Move Target\"); }}>Move Target</div>\n            <div onClick={() => { setTool(\"Place Walls\"); }}>Place Walls</div>\n            <div onClick={() => { setTool(\"Erase Walls\"); }}>Erase Walls</div>\n          </div>\n          <div className=\"Category\" onClick={() => {ToggleCategory(gridOpt, setGridOpt)}}>\n            Bitmap\n            <div onClick={() => { CleanBitmap(\"partial\"); }}>Clear Path</div>\n            <div onClick={() => { CleanBitmap(\"full\"); }}>Reset Bitmap</div>\n          </div>\n        </div>\n      </div>\n      <div id=\"StartStop\" \n        onClick={() => { ChangeButton(); }} \n        style={{backgroundColor: (startButton === \"Start!\") ? \"green\" : \n                                 (startButton === \"Stop!\") ? \"red\" : \"grey\"}}>\n        {startButton}\n      </div>\n      <div id=\"Key\"></div>\n      <div id=\"BitmapContainer\">\n        {bitmap}\n      </div> \n    </div>\n  );\n} \n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}